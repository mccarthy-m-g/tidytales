{
  "hash": "61d4fb4d9196ccf1a76869f2de0663b9",
  "result": {
    "markdown": "---\ntitle: What's he building in there?\ndescription: |\n  Customizing a {distill} website.\n\nauthor:\n  - name: Michael McCarthy\n    url: https://michaelmccarthy.tidytales.ca\n\ndate: '2021-06-19'\n\ncategories:\n  - .Misc\n  - \"{distill}\"\n  - \"{distilltools}\"\n  - \"{metathis}\"\n\nimage: images/distillclub.png\n\ntwitter-card:\n  title: \"Tidy Tales: What's he building in there?\"\n  image: images/twittercard.png\n  image-width: 1200\n  image-height: 628\n  card-style: summary_large_image\n  \nopen-graph:\n  title: \"Tidy Tales: What's he building in there?\"\n  image: images/twittercard.png\n\nresources: images/twittercard.png\n\nparams:\n  use_renv: FALSE\n  data_file: NULL\n  fair_dealing: FALSE\n---\n\n\n\n\n*Note: This blog is no longer built with Distill. It is now built with [Quarto](https://quarto.org), which is in many ways a successor to Distill.*\n\n## Overview\n\nTidy Tales is built using [Distill for R Markdown](https://rstudio.github.io/distill/), a web publishing format optimized for scientific and technical communication. I chose Distill for Tidy Tales over other R website formats for its simplicity and style. My [personal website](https://michaelmccarthy.tidytales.ca/) uses [**blogdown**](https://github.com/rstudio/blogdown), a more customizable but also more complicated format, which I did not want or need for Tidy Tales. That said, I did encounter some restrictions that I wanted to overcome while customizing Tidy Tales using the tools provided by Distill. This post covers some tips and tricks to get around these restrictions.\n\n## Page and Article Metadata\n\nDistill comes equipped with a number of features to automatically enable richer sharing of article links on the web using [article metadata](https://rstudio.github.io/distill/metadata.html). However, some of these features are not available for non-article pages on distill blogs (such as link preview images for the home page), and the automatic behaviour of these features limits how much they can be customized. Both of these limitations can be overcome using the [**metathis**](https://pkg.garrickadenbuie.com/metathis/) package by [Garrick Aden-Buie](https://github.com/gadenbuie).\n\nTom Mock has a great [blog post](https://themockup.blog/posts/2021-03-21-including-and-meta-tagging-extra-content-in-a-distill-blog/) diving into how metadata can be used to customize how links from a distill blog appear on social media. It's a great resource and I followed it to add metadata and preview images to the [home](https://tidytales.ca) and [about](https://tidytales.ca/about.html) pages of Tidy Tales.\n\nHere is what the `index.Rmd` file for the Tidy Tales home page looks like.\n\n````yaml\n---\ntitle: \"Wrangling, Visualizing, Modelling, Communicating data\"\nsite: distill::distill_website\nlisting: posts\n---\n\n```{r, include=FALSE, results='asis'}\nlibrary(metathis)\n\nmeta() %>%\n  meta_social(\n    title = \"Tidy Tales\",\n    description = \"Wrangling, Visualizing, Modelling, Communicating data\",\n    url = \"https://tidytales.ca\",\n    image = \"https://tidytales.ca/inst/images/twittercard.png\",\n    image_alt = \"Tidy Tales logo\",\n    og_type = \"website\",\n    twitter_card_type = \"summary\",\n    twitter_site = NULL\n  )\n```\n````\n\nWhen the site is built distill will automatically generate metadata for the home page, and the metathis code in `index.Rmd` will generate additional metadata for the home page. Here is what it looks like in HTML.\n\n```html\n<!-- Generated by distill -->\n<meta property=\"og:title\" content=\"Tidy Tales | Michael McCarthy: Wrangling, Visualizing, Modelling, Communicating data\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:locale\" content=\"en_US\">\n<meta property=\"og:site_name\" content=\"Tidy Tales | Michael McCarthy\">\n<meta property=\"twitter:card\" content=\"summary\">\n<meta property=\"twitter:title\" content=\"Tidy Tales | Michael McCarthy: Wrangling, Visualizing, Modelling, Communicating data\">\n<meta property=\"twitter:site\" content=\"@propertidytales\">\n<meta property=\"twitter:creator\" content=\"@mccarthymg\">\n\n<!-- Generated by metathis -->\n<meta property=\"og:locale\" content=\"en_US\">\n<meta name=\"twitter:title\" content=\"Tidy Tales\">\n<meta name=\"twitter:description\" content=\"Wrangling, Visualizing, Modelling, Communicating data\">\n<meta name=\"twitter:url\" content=\"https://tidytales.ca\">\n<meta name=\"twitter:image:src\" content=\"https://tidytales.ca/inst/images/twittercard.png\">\n<meta name=\"twitter:image:alt\" content=\"Tidy Tales logo\">\n<meta name=\"twitter:card\" content=\"summary\">\n<meta property=\"og:title\" content=\"Tidy Tales\">\n<meta property=\"og:description\" content=\"Wrangling, Visualizing, Modelling, Communicating data\">\n<meta property=\"og:url\" content=\"https://tidytales.ca\">\n<meta property=\"og:image\" content=\"https://tidytales.ca/inst/images/twittercard.png\">\n<meta property=\"og:image:alt\" content=\"Tidy Tales logo\">\n<meta property=\"og:type\" content=\"website\">\n```\n\nThere is some overlap between the `<meta>` tags generated by distill and metathis, however, the metadata tags generated by metathis seem to take precedence over those automatically generated by distill. For example, the Twitter card for the Tidy Tales home page displays \"Tidy Tales\" as its title, rather than \"Tidy Tales | Michael McCarthy: Wrangling, Visualizing, Modelling, Communicating data\".\n\n### Article Metadata\n\nThe ability to override some of the metadata generated by distill using metathis is hacky, but it also affords more customization for distill blogs. One trick I'm taking full advantage of with this is to have unique preview images between posts on Tidy Tales and their social cards. Distill allows you to specify a [preview image](https://rstudio.github.io/distill/blog.html#preview-images) for a post using the preview chunk option.\n\n````yaml\n```{r, preview=TRUE}\nlibrary(ggplot2)\nggplot(diamonds, aes(carat, price)) +\n  geom_smooth()\n```\n````\n\nThis preview image will be used alongside post listings and in social cards. However, if a different image is specified in `metathis::meta_social()` that image will be used in social cards but the preview image specified in the post chunk will still be used alongside post listings. I'm using this on Tidy Tales to have branded images for social cards and plain images for post listings. Here's an example of the branded social card image from my [first post](https://tidytales.ca/posts/2021-06-15_demons-souls/).\n\n\n::: {.cell opts.label='fig.graphic'}\n::: {.cell-output-display}\n![The branded social card image for my first post. Copy the [post link](https://tidytales.ca/posts/2021-06-15_demons-souls/) into a tweet to see it in action.](images/demons-souls_card.png){width=100%}\n:::\n:::\n\n\n## Utterances Comments\n\nDistill only supports [Disqus comments](https://rstudio.github.io/distill/blog.html#comments-and-sharing) officially. I did not want to use Disqus comments on Tidy Tales because it would add bloat to my posts, and because I do not want a third-party data mining and tracking Tidy Tales readers. [Utterances](https://github.com/utterance/utterances) is a lightweight alternative that uses GitHub issues for comments. Miles McBain shared an [HTML script](https://github.com/MilesMcBain/milesmcbain.com/blob/master/utterances.html) on his blog to [add Utterances to a distill blog](https://milesmcbain.micro.blog/2020/09/04/how-i-got.html).\n\nHere is what the script for Tidy Tales looks like.\n\n```html\n<script>\n document.addEventListener(\"DOMContentLoaded\", function () {\n   if (!/posts/.test(location.pathname)) {\n     return;\n   }\n\n   var script = document.createElement(\"script\");\n   script.src = \"https://utteranc.es/client.js\";\n   script.setAttribute(\"repo\", \"mccarthy-m-g/tidytales\");\n   script.setAttribute(\"issue-term\", \"title\");\n   script.setAttribute(\"crossorigin\", \"anonymous\");\n   script.setAttribute(\"label\", \"utterances\");\n   script.setAttribute(\"theme\", \"github-light\");\n\n   /* wait for article to load, append script to article element */\n   var observer = new MutationObserver(function (mutations, observer) {\n     var article = document.querySelector(\"details.comment-section\");\n     if (article) {\n       observer.disconnect();\n       /* HACK: article scroll */\n       article.setAttribute(\"style\", \"overflow-y: hidden\");\n       article.appendChild(script);\n     }\n   });\n\n   observer.observe(document.body, { childList: true });\n });\n</script>\n```\n\nThe script uses JavaScript to inject the Utterances `<iframe>` into the end of the first HTML Element within the document that matches the CSS selector specified in `document.querySelector()`. By default, the script shared by Miles will place the comment section at the end of a distill post's body. Since Utterances comments sections are not collapsible this presents a problem though, as more comments are made readers will have to scroll further and further to reach a post's appendix.\n\nTo overcome this on Tidy Tales I created new CSS selectors that use the `<details>` tag, so readers can show and hide the comments section as they please, and added a brightness and opacity filter to the selector for the Utterances `<iframe>` to make it fit into the Tidy Tales colour scheme better. I also wanted my comments section to be in the appendix of my posts rather than the body.\n\n```css\nd-appendix details.comment-section {\n  color: var(--dark-shade-alpha);\n  font-family: var(--heading-font);\n  font-size: 15px !important;\n}\n\nd-appendix details.comment-section summary:after {\n  content: \"Show\";\n}\n\nd-appendix details[open].comment-section summary:after {\n  content: \"Hide\";\n}\n\n.utterances {\n  filter: brightness(95%) opacity(85%);\n}\n```\n\nThe above HTML and CSS is applied to all Tidy Tales posts using the `theme` and `includes` parameters in `_site.yml`, so to add Utterances to a post I only need to include the following in the R Markdown file for a post as an [appendix header](https://rstudio.github.io/distill/basics.html#appendices).\n\n```markdown\n## Comments {.appendix}\n\n<details open class=\"comment-section\">\n   <summary>\n   </summary>\n</details>\n```\n\n## Post Templates\n\nFinally, and most importantly, I am using an R Markdown template for new Tidy Tales posts so I don't need to copy and paste all of my customizations into the YAML and body of every post I create. This is easily done using the `create_post_from_template()` function in the [**distilltools**](https://github.com/EllaKaye/distilltools) package by [Ella Kaye](https://github.com/EllaKaye). And it will be even easier after the [Pull Request](https://github.com/EllaKaye/distilltools/pull/12) I'm working on with Ella adds an RStudio addin for creating new posts from a template to the package.\n\n::: {.column-margin}\nElla also created the awesome [Distill Club hex sticker](https://github.com/EllaKaye/distillclub) I used for this post's preview image.\n:::\n\n\n::: {.cell opts.label='fig.graphic'}\n::: {.cell-output-display}\n![Preview of the *new post from template* RStudio addin for distilltools.](images/rstudio-addin.png){width=100%}\n:::\n:::\n\n\n## Community Tips and Tricks\n\nDistill has a great community of users supporting each other to build and customize their sites. [John Paul Helveston](https://github.com/jhelvy) has put together the [Distillery](https://distillery.rbind.io)---a distill blog about building distill websites and blogs---to collect [tips and tricks](https://distillery.rbind.io/tips_and_tricks.html) from the community and to [showcase](https://distillery.rbind.io/showcase.html) their distill websites and blogs. Check it out if you're thinking of joining the Distill Club!\n\n\n## {.appendix .unnumbered .unlisted}\n\n::: {.d-flex}\n\n![](/assets/images/avatar.png){fig-align=\"left\" fig-alt=\"Avatar\" .rounded .avatar}\n\n::: {}\n\n::: {}\n## Michael McCarthy {.quarto-appendix-heading}\n:::\n\nThanks for reading! I’m Michael, the voice behind Tidy Tales. I am an award winning data scientist and R programmer with the skills and experience to help you solve the problems you care about. You can learn more about me, my [consulting services](https://michaelmccarthy.tidytales.ca/consulting/), and my other projects on my [personal website](https://michaelmccarthy.tidytales.ca).\n:::\n\n:::\n\n## Comments {.appendix .unnumbered .unlisted}\n\n<details open>\n<summary></summary>\n::: {.giscus}\n:::\n</details>\n\n## Session Info {.appendix .unnumbered .unlisted}\n\n<details>\n<summary></summary>\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.2 (2022-10-31)\n os       macOS Mojave 10.14.6\n system   x86_64, darwin17.0\n ui       X11\n language (EN)\n collate  en_CA.UTF-8\n ctype    en_CA.UTF-8\n tz       America/Vancouver\n date     2022-12-21\n pandoc   2.14.0.3 @ /Applications/RStudio.app/Contents/MacOS/pandoc/ (via rmarkdown)\n quarto   1.2.280 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n here        * 1.0.1   2020-12-13 [1] CRAN (R 4.2.0)\n sessioninfo * 1.2.2   2021-12-06 [1] CRAN (R 4.2.0)\n\n [1] /Users/Michael/Library/R/x86_64/4.2/library/__tidytales\n [2] /Library/Frameworks/R.framework/Versions/4.2/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n</details>\n\n<!--\n## Data {.appendix .unnumbered .unlisted}\n\n[Download](/data/) the data used in this post.\n-->\n\n<!--\n## Fair Dealing {.appendix .unnumbered .unlisted}\n\nAny of the trademarks, service marks, collective marks, design rights or similar rights that are mentioned, used, or cited in this article are the property of their respective owners. They are used here as fair dealing for the purpose of education in accordance with [section 29 of the Copyright Act](https://laws-lois.justice.gc.ca/eng/acts/c-42/page-8.html#h-103270) and do not infringe copyright.\n-->\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}