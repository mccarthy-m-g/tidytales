{
  "hash": "3c57a879c84ef1e5ff1ab7db69af996e",
  "result": {
    "markdown": "---\ntitle: \"Go forth, slayer of Demons\"\ndescription: |\n  Blending {ggplot2} geoms with {ggfx} and other {magick} tricks.\n  \nauthor:\n  - name: Michael McCarthy\n    url: https://michaelmccarthy.tidytales.ca\n    affiliation: The Nexus\n\ndate: '2021-06-15'\n\ncategories:\n  - .Wrangle\n  - .Visualize\n  - \"{tidyverse}\"\n  - \"{ggplot2}\"\n  - \"{ggfx}\"\n  - \"{magick}\"\n  \nimage: images/demons-souls_plot.png\n\ntwitter-card:\n  title: \"Tidy Tales: Go forth, slayer of Demons\"\n  image: images/twittercard.png\n  image-width: 1200\n  image-height: 628\n  card-style: summary_large_image\n\nopen-graph:\n  title: \"Tidy Tales: Go forth, slayer of Demons\"\n  image: images/twittercard.png\n  \nparams:\n  use_renv: FALSE\n  data_file: \"2021-06-15_demons-souls.csv\"\n  fair_dealing: TRUE\n---\n\n\n\n\n## Overview\n\n> On the first day  \nMan was granted a soul  \nAnd with it, clarity  \n>\n> On the second day  \nupon Earth was planted  \nan irrevocable poison  \nA soul-devouring demon\n\nDemon's Souls is an action role-playing video game set in the dark fantasy kingdom of Boletaria, a land cursed with a deep, terrible fog brought forth by an ancient soul-devouring demon called the Old One. To lift the curse and mend the world players must slay and absorb the souls of five powerful archdemons, whereafter they can face the Old One and lull it back to slumber. Demon's Souls is renowned for its challenge and design, and has made a lasting impact on the video game industry. It is also the progenitor of what has become one of my favourite video game franchises.\n\n## Theming Inspiration\n\nHero text appears on the screen whenever the player performs a significant action in Demon's Souls, such as slaying a demon or, infamously, dying themselves. These provide a great design reference for plot theming.\n\n\n::: {.cell opts.label='fig.graphic'}\n::: {.cell-output-display}\n![](images/demon-destroyed.jpeg){width=100%}\n:::\n\n::: {.cell-output-display}\n![In-game screenshots of the hero text from Demon's Souls.](images/you-died.jpeg){width=100%}\n:::\n:::\n\n\nDemon's Souls also has a unique logo whose design I want to reference.\n\n\n::: {.cell opts.label='fig.graphic'}\n::: {.cell-output-display}\n![The Demon's Souls logo.](images/logo.jpg){width=100%}\n:::\n:::\n\n\nI want to translate these design elements to my plot like so:\n\n- The [Optimus Princeps](https://www.dafont.com/optimusprinceps.font) font can be used for plot text.\n- The yellow and red colours for the hero text can be used to contrast successes and failures, respectively.\n- The distressed, broken style of the Demon's Souls logo can be used for the plot's title.\n\nApplying these elements to my plot will help it fit the Demon's Souls aesthetic.\n\n## Prerequisites\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggfx)\nlibrary(magick)\n```\n:::\n\n\nI'll be using PlayStation Network trophy data for my plot. The data contains statistics for the percent of players who have slain a given boss in Demon's Souls out of all the players who have ever played the game. I have constructed the data manually since Sony does not provide an API to access PlayStation Network trophy data programmatically. Demon's Souls was released on February 5, 2009, so it is unlikely these stats will change much in the future.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Tribbles are not just useful for scaring Klingons, they make it easy to\n# create tibbles too\ndemons_souls <- tribble(\n  ~boss,            ~boss_type,  ~location,              ~archstone, ~percent_completed,\n  \"Phalanx\",        \"Demon\",     \"Boletarian Palace\",    \"1-1\",      63.1,               \n  \"Tower Knight\",   \"Demon\",     \"Boletarian Palace\",    \"1-2\",      46.6,               \n  \"Penetrator\",     \"Demon\",     \"Boletarian Palace\",    \"1-3\",      30.3,               \n  \"False King\",     \"Archdemon\", \"Boletarian Palace\",    \"1-4\",      24.2,               \n  \"Armor Spider\",   \"Demon\",     \"Stonefang Tunnel\",     \"2-1\",      43.9,               \n  \"Flamelurker\",    \"Demon\",     \"Stonefang Tunnel\",     \"2-2\",      35.1,               \n  \"Dragon God\",     \"Archdemon\", \"Stonefang Tunnel\",     \"2-3\",      33.1,               \n  \"Fool’s Idol\",    \"Demon\",     \"Tower of Latria\",      \"3-1\",      35.7,               \n  \"Maneater\",       \"Demon\",     \"Tower of Latria\",      \"3-2\",      28.7,               \n  \"Old Monk\",       \"Archdemon\", \"Tower of Latria\",      \"3-3\",      27.7,               \n  \"Adjudicator\",    \"Demon\",     \"Shrine of Storms\",     \"4-1\",      36.1,               \n  \"Old Hero\",       \"Demon\",     \"Shrine of Storms\",     \"4-2\",      28.8,               \n  \"Storm King\",     \"Archdemon\", \"Shrine of Storms\",     \"4-3\",      28.1,               \n  \"Leechmonger\",    \"Demon\",     \"Valley of Defilement\", \"5-1\",      32.5,               \n  \"Dirty Colossus\", \"Demon\",     \"Valley of Defilement\", \"5-2\",      27.2,               \n  \"Maiden Astraea\", \"Archdemon\", \"Valley of Defilement\", \"5-3\",      26.6\n) %>%\n  mutate(across(boss_type:archstone, as_factor))\n\ndemons_souls\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"boss\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"boss_type\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"location\"],\"name\":[3],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"archstone\"],\"name\":[4],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"percent_completed\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Phalanx\",\"2\":\"Demon\",\"3\":\"Boletarian Palace\",\"4\":\"1-1\",\"5\":\"63.1\"},{\"1\":\"Tower Knight\",\"2\":\"Demon\",\"3\":\"Boletarian Palace\",\"4\":\"1-2\",\"5\":\"46.6\"},{\"1\":\"Penetrator\",\"2\":\"Demon\",\"3\":\"Boletarian Palace\",\"4\":\"1-3\",\"5\":\"30.3\"},{\"1\":\"False King\",\"2\":\"Archdemon\",\"3\":\"Boletarian Palace\",\"4\":\"1-4\",\"5\":\"24.2\"},{\"1\":\"Armor Spider\",\"2\":\"Demon\",\"3\":\"Stonefang Tunnel\",\"4\":\"2-1\",\"5\":\"43.9\"},{\"1\":\"Flamelurker\",\"2\":\"Demon\",\"3\":\"Stonefang Tunnel\",\"4\":\"2-2\",\"5\":\"35.1\"},{\"1\":\"Dragon God\",\"2\":\"Archdemon\",\"3\":\"Stonefang Tunnel\",\"4\":\"2-3\",\"5\":\"33.1\"},{\"1\":\"Fool’s Idol\",\"2\":\"Demon\",\"3\":\"Tower of Latria\",\"4\":\"3-1\",\"5\":\"35.7\"},{\"1\":\"Maneater\",\"2\":\"Demon\",\"3\":\"Tower of Latria\",\"4\":\"3-2\",\"5\":\"28.7\"},{\"1\":\"Old Monk\",\"2\":\"Archdemon\",\"3\":\"Tower of Latria\",\"4\":\"3-3\",\"5\":\"27.7\"},{\"1\":\"Adjudicator\",\"2\":\"Demon\",\"3\":\"Shrine of Storms\",\"4\":\"4-1\",\"5\":\"36.1\"},{\"1\":\"Old Hero\",\"2\":\"Demon\",\"3\":\"Shrine of Storms\",\"4\":\"4-2\",\"5\":\"28.8\"},{\"1\":\"Storm King\",\"2\":\"Archdemon\",\"3\":\"Shrine of Storms\",\"4\":\"4-3\",\"5\":\"28.1\"},{\"1\":\"Leechmonger\",\"2\":\"Demon\",\"3\":\"Valley of Defilement\",\"4\":\"5-1\",\"5\":\"32.5\"},{\"1\":\"Dirty Colossus\",\"2\":\"Demon\",\"3\":\"Valley of Defilement\",\"4\":\"5-2\",\"5\":\"27.2\"},{\"1\":\"Maiden Astraea\",\"2\":\"Archdemon\",\"3\":\"Valley of Defilement\",\"4\":\"5-3\",\"5\":\"26.6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Wrangle\n\nThe data is already structured the way I want it for my plot, but there are still some interesting things to explore through wrangling and summary stats.\n\nWithin each location, players have to slay each demon in the order specified by the archstones. For example, in the Boletarian Palace a player cannot face the Tower Knight before they have slain the Phalanx. So each location has a first, second, and third boss (and the Boletarian Palace has a fourth that can only be faced after slaying all the other demons). This can be used to get an imperfect idea of player attrition in the game.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Detect the order of bosses based on archstone suffix\ndemons_souls <- demons_souls %>%\n  mutate(\n    archstone_boss = case_when(\n      str_detect(archstone, \"-1\") ~ \"First\",\n      str_detect(archstone, \"-2\") ~ \"Second\",\n      str_detect(archstone, \"-3\") ~ \"Third\",\n      str_detect(archstone, \"-4\") ~ \"Fourth (False King)\"\n    ),\n    archstone_boss = as_factor(archstone_boss),\n    .after = archstone\n  )\n\ndemons_souls\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"boss\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"boss_type\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"location\"],\"name\":[3],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"archstone\"],\"name\":[4],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"archstone_boss\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"percent_completed\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Phalanx\",\"2\":\"Demon\",\"3\":\"Boletarian Palace\",\"4\":\"1-1\",\"5\":\"First\",\"6\":\"63.1\"},{\"1\":\"Tower Knight\",\"2\":\"Demon\",\"3\":\"Boletarian Palace\",\"4\":\"1-2\",\"5\":\"Second\",\"6\":\"46.6\"},{\"1\":\"Penetrator\",\"2\":\"Demon\",\"3\":\"Boletarian Palace\",\"4\":\"1-3\",\"5\":\"Third\",\"6\":\"30.3\"},{\"1\":\"False King\",\"2\":\"Archdemon\",\"3\":\"Boletarian Palace\",\"4\":\"1-4\",\"5\":\"Fourth (False King)\",\"6\":\"24.2\"},{\"1\":\"Armor Spider\",\"2\":\"Demon\",\"3\":\"Stonefang Tunnel\",\"4\":\"2-1\",\"5\":\"First\",\"6\":\"43.9\"},{\"1\":\"Flamelurker\",\"2\":\"Demon\",\"3\":\"Stonefang Tunnel\",\"4\":\"2-2\",\"5\":\"Second\",\"6\":\"35.1\"},{\"1\":\"Dragon God\",\"2\":\"Archdemon\",\"3\":\"Stonefang Tunnel\",\"4\":\"2-3\",\"5\":\"Third\",\"6\":\"33.1\"},{\"1\":\"Fool’s Idol\",\"2\":\"Demon\",\"3\":\"Tower of Latria\",\"4\":\"3-1\",\"5\":\"First\",\"6\":\"35.7\"},{\"1\":\"Maneater\",\"2\":\"Demon\",\"3\":\"Tower of Latria\",\"4\":\"3-2\",\"5\":\"Second\",\"6\":\"28.7\"},{\"1\":\"Old Monk\",\"2\":\"Archdemon\",\"3\":\"Tower of Latria\",\"4\":\"3-3\",\"5\":\"Third\",\"6\":\"27.7\"},{\"1\":\"Adjudicator\",\"2\":\"Demon\",\"3\":\"Shrine of Storms\",\"4\":\"4-1\",\"5\":\"First\",\"6\":\"36.1\"},{\"1\":\"Old Hero\",\"2\":\"Demon\",\"3\":\"Shrine of Storms\",\"4\":\"4-2\",\"5\":\"Second\",\"6\":\"28.8\"},{\"1\":\"Storm King\",\"2\":\"Archdemon\",\"3\":\"Shrine of Storms\",\"4\":\"4-3\",\"5\":\"Third\",\"6\":\"28.1\"},{\"1\":\"Leechmonger\",\"2\":\"Demon\",\"3\":\"Valley of Defilement\",\"4\":\"5-1\",\"5\":\"First\",\"6\":\"32.5\"},{\"1\":\"Dirty Colossus\",\"2\":\"Demon\",\"3\":\"Valley of Defilement\",\"4\":\"5-2\",\"5\":\"Second\",\"6\":\"27.2\"},{\"1\":\"Maiden Astraea\",\"2\":\"Archdemon\",\"3\":\"Valley of Defilement\",\"4\":\"5-3\",\"5\":\"Third\",\"6\":\"26.6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nNow, there are two ways to go about getting this imperfect idea of player attrition in the game. The first involves using the entire data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the average percent of players who have slain the first, second,\n# ..., archstone boss across locations. \ndemons_souls %>%\n  group_by(archstone_boss) %>%\n  summarise(average_completed = mean(percent_completed))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"archstone_boss\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"average_completed\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"First\",\"2\":\"42.26\"},{\"1\":\"Second\",\"2\":\"33.28\"},{\"1\":\"Third\",\"2\":\"29.16\"},{\"1\":\"Fourth (False King)\",\"2\":\"24.20\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nThe second involves removing the Phalanx from the data set due to its influential pull on the average for the first archstone boss. It has a much higher completion percent (63.1%) than the other bosses in the game, and the reason for this is that the Phalanx is the first boss in the game. Players must slay it before they can go to face the first archstone boss from other locations in the game. Removing the Phalanx might give a more accurate picture of average completion for first archstone bosses.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Trophy earned: Slayer of Demon \"Phalanx\"\ndemons_souls %>%\n  filter(boss != \"Phalanx\") %>%\n  group_by(archstone_boss) %>%\n  summarise(average_completed = mean(percent_completed))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"archstone_boss\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"average_completed\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"First\",\"2\":\"37.05\"},{\"1\":\"Second\",\"2\":\"33.28\"},{\"1\":\"Third\",\"2\":\"29.16\"},{\"1\":\"Fourth (False King)\",\"2\":\"24.20\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nWith the Phalanx's influence removed, it looks like there is roughly a 4% drop in average completion for each successive archstone boss. In order to face the False King players must first slay every other demon and archdemon in the game, so it is interesting the drop stays consistent there. Most players who made it far enough to slay their first archdemon then went on to slay the rest.\n\n::: {.column-margin}\nUmbassa.\n:::\n\nAbout one quarter of Demon's Souls players persisted to the end of the game. But three quarters did not. Assuming most players at least attempted each location, then averaging by location can give an imperfect idea of their overall difficulty for players during their first playthrough.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the average completion rate by location, arranged from \"easiest\" to\n# \"hardest\"\ndemons_souls %>%\n  group_by(location) %>%\n  summarise(average_completed = mean(percent_completed)) %>%\n  arrange(desc(average_completed))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"location\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"average_completed\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Boletarian Palace\",\"2\":\"41.05000\"},{\"1\":\"Stonefang Tunnel\",\"2\":\"37.36667\"},{\"1\":\"Shrine of Storms\",\"2\":\"31.00000\"},{\"1\":\"Tower of Latria\",\"2\":\"30.70000\"},{\"1\":\"Valley of Defilement\",\"2\":\"28.76667\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nIt looks like there are two clusters here, an easier one with the Boletarian Palace and Stonefang Tunnel, and a harder one with Shrine of Storms, Tower of Latria, and the Valley of Defilement. I finished my first playthrough of the game in 2012, so I only have distant memories to reflect on, but this ranking looks sound to me. For experienced players I think this ranking is less relevant. Once you're experienced most of the variability in difficulty comes down to the character build you choose.\n\n## Visualize\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define aliases for plot fonts and colours\noptimus <- \"OptimusPrinceps\"\noptimus_b <- \"OptimusPrincepsSemiBold\"\nyellow <- \"#ffaf24\" #  #fec056\n```\n:::\n\n\nThe plot I want to make is inspired by [this Tidy Tuesday plot](https://github.com/gkaramanis/tidytuesday/tree/master/2021/2021-week8) by Georgios Karamanis. I used Georgios' code as a starting point, then modified it to get the behaviour and result I wanted.\n\nThe centrepiece of the plot is the coloured text that shows the percent of Demon's Souls players who have completed a given boss in yellow and who have not in red. This effect is achieved by applying a rectangular filter over the text that only allows the portion of the text within the filter's borders to be shown. Doing this once for yellow text and once for red text allows the full string to appear, with the ratio of colours within a boss's name reflecting the percent of players that have completed it. A few calculations are needed in order for the ratios to be accurate, and for the text to look aesthetically pleasing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemons_souls_plot <- demons_souls %>%\n  mutate(\n    # Percentages need to be in decimal form for the calculations and plotting\n    # to work properly\n    percent_completed = percent_completed/100,\n    boss = fct_reorder(toupper(boss), percent_completed),\n    # In order to justify text to the same width, a ratio of how many times\n    # each string would fit into the widest string needs to be calculated. This\n    # can then be multiplied by an arbitrary value to determine the final size\n    # for each string of text.\n    str_width = strwidth(boss, family = optimus_b, units = \"inches\") * 25.4, # in millimetres\n    str_ratio = max(str_width)/str_width,\n    text_size = 4.9 * str_ratio,\n    # The division here is arbitrary, its effect is reflected in the scale of the\n    # y-axis\n    tile_height = text_size / 10\n  ) %>%\n  # Bosses will appear from top to bottom based on completion ratios. The\n  # calculation here accounts for the differences in text size for each string.\n  arrange(percent_completed) %>%\n  mutate(y = cumsum(lag(tile_height/2, default = 0) + tile_height/2))\n```\n:::\n\n\nNow the plot can be constructed. The final code for the plot is roughly 100 lines long, so I've hidden it in the section below. However, there are a few parts of the code I want to highlight before showing the final plot.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show Code\"}\n# The trick for geom spacing is to set the size of the plot from the start\nfile <- tempfile(fileext = '.png')\nragg::agg_png(file, width = 4, height = 5.5, res = 300, units = \"in\")\n\nggplot(demons_souls_plot) +\n  # Make it easier to see where 50% is using a vertical line. geom_segment() is\n  # used here instead of geom_vline() because the latter goes up into the title\n  # text. An empty data frame is supplied so that only one copy of the geom is\n  # drawn.\n  geom_segment(aes(\n    x = 0,\n    xend = 0,\n    y = 10.9,\n    yend = 0,\n    size = 0.6),\n    data = data.frame(),\n    alpha = 0.3,\n    colour = \"grey\",\n    lineend = \"round\",\n    linetype = \"twodash\"\n  ) +\n  scale_alpha_identity() +\n  \n  # Set bounding box for yellow portion of centrepiece text\n  as_reference(\n    geom_rect(aes(\n      xmin = -0.5,\n      xmax = -0.5 + ((percent_completed)),\n      ymin = y - (tile_height * 0.5),\n      ymax = y + (tile_height * 0.5)\n    )), \n    id = \"demon_vanquished\"\n  ) +\n  # Only show the portion of yellow centrepiece text located within the\n  # bounding box\n  with_blend(\n    geom_text(aes(\n      x = 0,\n      y = y,\n      label = boss,\n      size = text_size\n    ),\n    colour = yellow,\n    family = optimus_b),\n    bg_layer = \"demon_vanquished\",\n    blend_type = \"in\"\n  ) +\n  # Set bounding box for red portion of centrepiece text\n  as_reference(\n    geom_rect(aes(\n      xmin = 0.5 - ((1 - percent_completed)),\n      xmax = 0.5,\n      ymin = y - (tile_height * 0.5),\n      ymax = y + (tile_height * 0.5)\n    )), \n    id = \"you_died\"\n  ) +\n  # Only show the portion of red centrepiece text located within the bounding\n  # box\n  with_blend(\n    geom_text(aes(\n      x = 0,\n      y = y,\n      label = boss,\n      size = text_size\n    ),\n    colour = \"red\",\n    family = optimus_b),\n    bg_layer = \"you_died\",\n    blend_type = \"in\"\n  ) +\n  \n  # Draw \"axis\" for Demon Vanquished\n  annotate(\n    \"text\",\n    x = -0.65,\n    y = 7.75,\n    label = \"demon vanquished\",\n    angle = 90,\n    size = 5,\n    family = optimus,\n    colour = yellow\n  ) +\n  geom_segment(aes(\n    x = -0.645,\n    xend = -0.645,\n    y = 10.05,\n    yend = 10.45),\n    lineend = \"round\",\n    colour = yellow,\n    size = 0.3,\n    arrow = arrow(angle = 45, length = unit(1, \"mm\"), type = \"open\")\n  ) +\n  # Draw \"axis\" for You Died\n  annotate(\n    \"text\",\n    x = 0.65,\n    y = 4.65,\n    label = \"you died\",\n    angle = 270,\n    size = 5,\n    family = optimus,\n    colour = \"red\"\n  ) +\n  geom_segment(aes(\n    x = 0.645,\n    xend = 0.645,\n    y = 3.51,\n    yend = 3.01),\n    lineend = \"round\",\n    colour = \"red\",\n    size = 0.3,\n    arrow = arrow(angle = 45, length = unit(1, \"mm\"), type = \"open\")\n  ) +\n  \n  # Draw a title surrounded by line decorations at the top of the panel\n  geom_segment(aes(\n    x = -0.75,\n    xend = 0.75,\n    y = 13.2,\n    yend = 13.2,\n    size = 0.3),\n    lineend = \"round\",\n    colour = \"grey\"\n  ) +\n  annotate(\n    \"text\",\n    x = 0,\n    y = 12.325,\n    size = 7,\n    family = optimus_b,\n    colour = \"white\",\n    lineheight = 0.75,\n    label = \"DEMON’S SOULS\\nBOSS COMPLETION\"\n  ) +\n  geom_segment(aes(\n    x = -0.025,\n    xend = -0.75,\n    y = 11.4,\n    yend = 11.4,\n    size = 0.3),\n    lineend = \"round\",\n    colour = \"grey\"\n  ) +\n  geom_segment(aes(\n    x = 0.025,\n    xend = 0.75,\n    y = 11.4,\n    yend = 11.4,\n    size = 0.3),\n    lineend = \"round\",\n    colour = \"grey\"\n  ) +\n  annotate(\n    \"point\",\n    x  = 0,\n    y = 11.4,\n    colour = \"grey\",\n    shape = 5,\n    size = 2,\n    stroke = 0.6\n  ) +\n  annotate(\n    \"point\",\n    x  = 0,\n    y = 11.4,\n    colour = \"grey\",\n    shape = 5,\n    size = 0.75\n  ) +\n  \n  # Draw plot caption\n  annotate(\n    \"text\",\n    x = 1,\n    y = 10.33,\n    angle = 270,\n    hjust = 0,\n    size = 3,\n    alpha = 0.3,\n    label = \"SOURCE: PLAYSTATION NETWORK | GRAPHIC: MICHAEL MCCARTHY\",\n    family = optimus,\n    color = \"grey\"\n  ) +\n  \n  # Make sure the text size calculated for each string is used so that strings\n  # are justified\n  scale_size_identity() +\n  # Take axis limits exactly from data so there's no spacing around the panel,\n  # allow drawing outside of the panel for annotations, and set the axis limits\n  # to match the limits of the text.\n  coord_cartesian(expand = FALSE, clip = \"off\", xlim = c(-0.5, 0.5)) +\n  # Specify the panel size manually. This makes it easier to position plot\n  # elements with absolute positions.\n  ggh4x::force_panelsizes(rows = unit(5, \"in\"), # height\n                          cols = unit(1.8, \"in\")) + # width\n  theme_void() +\n  theme(\n    legend.position = \"none\",\n    plot.margin = unit(c(0.5, 4, 0.5, 4), \"in\"),\n    plot.background = element_rect(fill = \"black\", color = NA))\n\ninvisible(dev.off())\n\n# Apply a mask texture to the final image to mimic the style of the Demon's\n# Souls logo in the plot title\nmask <- image_read(\n  here(\"posts\", \"2021-06-15_demons-souls\", \"images\", \"texture.png\")\n  ) %>%\n  image_transparent(\"white\") %>%\n  image_threshold(\"black\", \"90%\")\n\nfinal_plot <- image_composite(image_read(file), mask, operator = \"Over\")\n```\n:::\n\n\nFirst, the code behind the coloured centrepiece text. It uses `ggfx::as_reference()` and `ggfx::with_blend()` to selectively apply a filter over portions of the text, as I discussed earlier. The boundaries of the filter are defined by the ggplot2 geom inside of `ggfx::as_reference()`, then `ggfx::with_blend()` applies a filter specified by `blend_type` to the ggplot2 geom inside of it. By duplicating this process twice---once for yellow text and again for red text---but with different filter boundaries based on the percent completed and not completed, the entire boss name is displayed with accurate colour fills.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  # Set bounding box for yellow portion of centrepiece text\n  as_reference(\n    geom_rect(aes(\n      xmin = -0.5,\n      xmax = -0.5 + ((percent_completed)),\n      ymin = y - (tile_height * 0.5),\n      ymax = y + (tile_height * 0.5)\n    )), \n    id = \"demon_vanquished\"\n  ) +\n  # Only show the portion of yellow centrepiece text located within the\n  # bounding box\n  with_blend(\n    geom_text(aes(\n      x = 0,\n      y = y,\n      label = boss,\n      size = text_size\n    ),\n    colour = yellow,\n    family = optimus_b),\n    bg_layer = \"demon_vanquished\",\n    blend_type = \"in\"\n  ) +\n   # Set bounding box for red portion of centrepiece text\n  as_reference(\n    geom_rect(aes(\n      xmin = 0.5 - ((1 - percent_completed)),\n      xmax = 0.5,\n      ymin = y - (tile_height * 0.5),\n      ymax = y + (tile_height * 0.5)\n    )), \n    id = \"you_died\"\n  ) +\n  # Only show the portion of red centrepiece text located within the bounding\n  # box\n  with_blend(\n    geom_text(aes(\n      x = 0,\n      y = y,\n      label = boss,\n      size = text_size\n    ),\n    colour = \"red\",\n    family = optimus_b),\n    bg_layer = \"you_died\",\n    blend_type = \"in\"\n  )\n```\n:::\n\n\nSecond, the code behind the distressed, broken style of the title text. This one is actually quite simple. It uses `magick::image_composite()` to apply a texture mask I made in [Krita](https://krita.org/) over the composed plot. The mask has a transparent background with black lines located over the space where the plot title is. Both the composed plot and mask images have the same dimensions, so when they're composed together the effect is applied exactly where I want it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_composite(plot, mask, operator = \"Over\")\n```\n:::\n\n\nFinally, I just wanted to note that the decorative lines around the plot's title text are actually made up of ggplot2 geoms. I used two `ggplot2::geom_point()` geoms with different sizes to create the diamond on the bottom line.\n\n## Final Graphic\n\n\n::: {.cell opts.label='fig.graphic'}\n::: {.cell-output-display}\n![](index_files/figure-html/final-plot-1.png){width=100%}\n:::\n:::\n\n## {.appendix .unnumbered .unlisted}\n\n::: {.d-flex}\n\n![](https://github.com/mccarthy-m-g/michaelmccarthy/raw/main/content/about/sidebar/avatar.png){fig-align=\"left\" fig-alt=\"Avatar\" .rounded .avatar}\n\n::: {}\n\n::: {}\n## Michael McCarthy {.quarto-appendix-heading}\n:::\n\nI am an award winning data scientist and R programmer creating data solutions for the problems you care about. I offer training consulting services to help you accomplish your goals at any point in your project lifecycle. I value building new connections and would love to discuss opportunities to work with you. Let’s get to know each other.\n:::\n\n:::\n\n## Comments {.appendix .unnumbered .unlisted}\n\n<details open>\n<summary></summary>\n::: {.giscus}\n:::\n</details>\n\n## Session Info {.appendix .unnumbered .unlisted}\n\n<details>\n<summary></summary>\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.1.1 (2021-08-10)\n os       macOS Mojave 10.14.6\n system   x86_64, darwin17.0\n ui       X11\n language (EN)\n collate  en_CA.UTF-8\n ctype    en_CA.UTF-8\n tz       America/Vancouver\n date     2022-11-22\n pandoc   2.14.0.3 @ /Applications/RStudio.app/Contents/MacOS/pandoc/ (via rmarkdown)\n quarto   1.2.247 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n dplyr       * 1.0.10  2022-09-01 [1] CRAN (R 4.1.2)\n forcats     * 0.5.1   2021-01-27 [1] CRAN (R 4.1.0)\n ggfx        * 1.0.0   2021-03-31 [1] CRAN (R 4.1.0)\n ggplot2     * 3.3.6   2022-05-03 [1] CRAN (R 4.1.2)\n here        * 1.0.1   2020-12-13 [1] CRAN (R 4.1.0)\n magick      * 2.7.3   2021-08-18 [1] CRAN (R 4.1.0)\n purrr       * 0.3.4   2020-04-17 [1] CRAN (R 4.1.0)\n readr       * 2.1.2   2022-01-30 [1] CRAN (R 4.1.2)\n sessioninfo * 1.2.2   2021-12-06 [1] CRAN (R 4.1.0)\n stringr     * 1.4.0   2019-02-10 [1] CRAN (R 4.1.0)\n tibble      * 3.1.6   2021-11-07 [1] CRAN (R 4.1.0)\n tidyr       * 1.2.0   2022-02-01 [1] CRAN (R 4.1.2)\n tidyverse   * 1.3.1   2021-04-15 [1] CRAN (R 4.1.0)\n\n [1] /Users/Michael/Library/R/4.1/library\n [2] /Library/Frameworks/R.framework/Versions/4.1/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n</details>\n\n\n## Data {.appendix .unnumbered .unlisted}\n\n[Download](/data/2021-06-15_demons-souls.csv) the data used in this post.\n\n\n\n## Fair Dealing {.appendix .unnumbered .unlisted}\n\nAny of the trademarks, service marks, collective marks, design rights or similar rights that are mentioned, used, or cited in this article are the property of their respective owners. They are used here as fair dealing for the purpose of education in accordance with [section 29 of the Copyright Act](https://laws-lois.justice.gc.ca/eng/acts/c-42/page-8.html#h-103270) and do not infringe copyright.\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}